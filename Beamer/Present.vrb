\tiny
\begin{lstlisting}
	subroutine Initial()
	implicit none
	integer :: i, j, k, p
	real :: spacing, v_stddev, rand1, rand2, Tp, E
	allocate(dens(n,3,2))
	ntrelax = int(trelax/dt); nt = int((tmax - tmin)/dt)
	dt = dt*1.0e-12*(ep/m)**0.5*1./sigma
	! Initialize densitions randomly within the box
	spacing = L / (int(n**(1.0/3.0)) + 1) ! Adjust spacing to avoid boundary
	p = 0
	do i = 0, int(n**(1.0/3.0))
	do j = 0, int(n**(1.0/3.0))
	do k = 0, int(n**(1.0/3.0))
	p = p + 1
	if (p > n) exit
	dens(p,1,1) = i * spacing
	dens(p,2,1) = j * spacing
	dens(p,3,1) = k * spacing
	end do
	if (p > n) exit
	end do
	if (p > n) exit
	end do
	v_stddev = sqrt(kb * T / m)
	do i = 1, n
	do j = 1, 3
	call random_number(rand1); call random_number(rand2)
	dens(i,j,2) = v_stddev * sqrt(-2.0 * log(rand1)) &
	* cos(2.0 * 3.14159265359 * rand2)
	end do
	end do
	do i = 1, 3
	dens(:,i,2) = dens(:,i,2) - sum(dens(:,i,2))/n
	end do
	Tp = sum(dens(:,:,2)**2.) * m / (3.0 * n * kb)
	dens(:,:,2) = dens(:,:,2) * sqrt(T / Tp)
	dens(:,:,2) = dens(:,:,2) / (ep/m)**0.5 ! Convert to dimensionless units
	end subroutine
\end{lstlisting}
